{"version":3,"sources":["images/logo_russia.svg","components/landing/Header.js","components/landing/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","utils/utils.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Spinner.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Footer","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","link","name","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","about","map","PopupWithForm","title","isOpen","onClose","buttonTitle","children","onSubmit","ImagePopup","api","url","headers","this","_url","_headers","fetch","then","_getResponseValue","method","body","JSON","stringify","data","id","response","ok","json","Promise","reject","status","authorization","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","placeholder","minLength","maxLength","value","onChange","evt","target","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","required","AddPlacePopup","setLink","Spinner","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","setCurrentUser","setCards","isLoading","setIsLoading","selectedCard","setSelectedCard","closeAllPopups","getInfoAboutUser","currentUserData","catch","err","console","log","getCards","Provider","changeLikeCardStatus","newCardSomeLike","state","c","deleteCard","filter","setInfoAboutUser","onSuccess","addCard","newCard","setAvatarUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1ffdbbc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_russia.bbe2a6ea.svg\";","import React from \"react\";\r\nimport logo from \"../../images/logo_russia.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header wrapper\">\r\n      <img src={logo} alt=\"логотип\" className=\"header__logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer wrapper\">\r\n      <p className=\"footer__copyright margin\">&copy; 2020. Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `foto-grid__urn ${\r\n    isOwn ? \"foto-grid__urn_show\" : \"\"\r\n  }`;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `foto-grid__name-heart ${\r\n    isLiked ? \"foto-grid__name-heart_black\" : \"\"\r\n  }`;\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"foto-grid__card\">\r\n      <div\r\n        className={cardDeleteButtonClassName}\r\n        type=\"button\"\r\n        aria-label=\"Удалить\"\r\n        onClick={handleDeleteClick}\r\n      ></div>\r\n      <img\r\n        src={`${card.link}`}\r\n        alt={`${card.name}`}\r\n        onClick={handleClick}\r\n        className=\"foto-grid__item\"\r\n      />\r\n      <div className=\"foto-grid__name\">\r\n        <h2 className=\"foto-grid__name-title title-cutter\">{card.name}</h2>\r\n        <div className=\"foto-grid__likesBlock\">\r\n          <button\r\n            aria-label=\"Поставить лайк\"\r\n            type=\"button\"\r\n            className={cardLikeButtonClassName}\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <div className=\"foto-grid__likesQty\">{card.likes.length}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main({\r\n  onEditProfile,\r\n  onAddPlace,\r\n  onEditAvatar,\r\n  onCardClick,\r\n  cards,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"lead\">\r\n        <div className=\"lead__titles\">\r\n          <button\r\n            aria-label=\"Редактировать аватар\"\r\n            type=\"button\"\r\n            className=\"lead__avatarButton opacity\"\r\n            onClick={onEditAvatar}\r\n          ></button>\r\n          <img\r\n            className=\"lead__image\"\r\n            src={currentUser.avatar}\r\n            alt=\"Фото пользователя\"\r\n          />\r\n          <div className=\"lead__wrapper-titles\">\r\n            <div className=\"lead__wrapper-title\">\r\n              <h1 className=\"lead__title title-cutter\">{currentUser.name}</h1>\r\n              <button\r\n                aria-label=\"Внести изменения в форму\"\r\n                type=\"button\"\r\n                className=\"lead__pencil opacity\"\r\n                onClick={onEditProfile}\r\n              ></button>\r\n            </div>\r\n            <p className=\"lead__subtitle title-cutter margin\">\r\n              {currentUser.about}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          aria-label=\"Добавить карточку\"\r\n          type=\"button\"\r\n          className=\"lead__button opacity\"\r\n          onClick={onAddPlace}\r\n        ></button>\r\n      </section>\r\n      <section className=\"foto-grid\" aria-label=\"Фото красивых мест\">\r\n        {cards.map((card) => {\r\n          return (\r\n            <Card\r\n              key={card._id}\r\n              card={card}\r\n              onCardLike={onCardLike}\r\n              onCardDelete={onCardDelete}\r\n              onCardClick={onCardClick}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\nexport default Main;\r\n","function PopupWithForm({\r\n  name,\r\n  title,\r\n  isOpen,\r\n  onClose,\r\n  buttonTitle,\r\n  children,\r\n  onSubmit,\r\n}) {\r\n  return (\r\n    <section\r\n      className={`popup popup_type_${name} ${isOpen ? \"popup_opened\" : \"\"}`}\r\n    >\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__close-cross opacity\"\r\n          aria-label=\"Закрыть попап\"\r\n          onClick={onClose}\r\n        ></button>\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        <form\r\n          onSubmit={onSubmit}\r\n          className=\"popup__inputs\"\r\n          name={`${name}_form`}\r\n        >\r\n          {children}\r\n          <button\r\n            className=\"popup__submit-btn\"\r\n            type=\"submit\"\r\n            aria-label=\"Кнопка Сохранить\"\r\n          >\r\n            {buttonTitle}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default PopupWithForm;\r\n","function ImagePopup({ card, onClose }) {\r\n  return (\r\n    <div className={`foto-open popup ${card.link ? \"popup_opened\" : \"\"}`}>\r\n      <div className=\"foto-open__container\">\r\n        <img\r\n          className=\"foto-open__image\"\r\n          src={`${card.link}`}\r\n          alt={`${card.name}`}\r\n        />\r\n        <button\r\n          aria-label=\"Закрыть фото\"\r\n          type=\"button\"\r\n          className=\" popup__close-cross opacity\"\r\n          onClick={onClose}\r\n        ></button>\r\n        <h2 className=\"foto-open__name\">{`${card.name}`}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import { url, token } from \"./utils.js\";\r\n\r\nclass Api {\r\n  constructor({ url, headers }) {\r\n    this._url = url;\r\n    this._headers = headers;\r\n  }\r\n  getInfoAboutUser() {\r\n    return fetch(`${this._url}users/me`, {\r\n      headers: this._headers,\r\n    }).then(this._getResponseValue);\r\n  }\r\n\r\n  setInfoAboutUser({ name, about }) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then(this._getResponseValue);\r\n  }\r\n\r\n  setAvatarUser(data) {\r\n    return fetch(`${this._url}users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    }).then(this._getResponseValue);\r\n  }\r\n\r\n  getCards() {\r\n    return fetch(`${this._url}cards`, {\r\n      headers: this._headers,\r\n    }).then(this._getResponseValue);\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n    }).then(this._getResponseValue);\r\n  }\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._getResponseValue);\r\n  }\r\n  likeCard(id) {\r\n    return fetch(`${this._url}cards/likes/${id}`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then(this._getResponseValue);\r\n  }\r\n\r\n  dislikeCard(id) {\r\n    return fetch(`${this._url}cards/likes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._getResponseValue);\r\n  }\r\n  changeLikeCardStatus(id, isLiked) {\r\n    return fetch(`${this._url}cards/likes/${id}`, {\r\n      method: isLiked ? \"DELETE\" : \"PUT\",\r\n      headers: this._headers,\r\n    }).then(this._getResponseValue);\r\n  }\r\n\r\n  _getResponseValue(response) {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${response.status}`);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url: url,\r\n  headers: {\r\n    authorization: token,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\nexport default api;\r\n","const url = \"https://mesto.nomoreparties.co/v1/cohort-26/\";\r\nconst token = \"3a9cf3fc-5610-46e8-9a9e-577623385356\";\r\nexport { url, token };\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  // Подписка на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      onSubmit={handleSubmit}\r\n      title=\"Редактировать профиль\"\r\n      name=\"editProfile\"\r\n      buttonTitle=\"Сохранить\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n    >\r\n      <fieldset className=\"popup__inputs\">\r\n        <input\r\n          id=\"initial-input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Имя Фамилия\"\r\n          className=\"input popup__input-text\"\r\n          /* required */\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          value={name || \"\"}\r\n          onChange={handleChangeName}\r\n        />\r\n        <span className=\"initial-input-error popup__error\"></span>\r\n        <input\r\n          id=\"rank-input\"\r\n          type=\"text\"\r\n          name=\"about\"\r\n          placeholder=\"Род деятельности\"\r\n          className=\"input popup__input-text\"\r\n          /* required */\r\n          minLength=\"2\"\r\n          maxLength=\"200\"\r\n          value={description || \"\"}\r\n          onChange={handleChangeDescription}\r\n        />\r\n        <span className=\"rank-input-error popup__error\"></span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const inputRef = React.useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar(\r\n      {\r\n        avatar: inputRef.current.value,\r\n      },\r\n      () => {\r\n        inputRef.current.value = \"\";\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Обновить аватар\"\r\n      name=\"avatar\"\r\n      onSubmit={handleSubmit}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      buttonTitle=\"Сохранить\"\r\n    >\r\n      <fieldset className=\"popup__inputs\">\r\n        <input\r\n          ref={inputRef}\r\n          type=\"url\"\r\n          name=\"link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          className=\"input  popup__input-text\"\r\n          required\r\n        />\r\n        <span className=\"avatar-input-error popup__error\"></span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default EditAvatarPopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace({ name, link }, () => {\r\n      setName(\"\");\r\n      setLink(\"\");\r\n    });\r\n  }\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [link, setLink] = React.useState(\"\");\r\n\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeLink(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Новое место\"\r\n      name=\"addCard\"\r\n      buttonTitle=\"Создать\"\r\n      onSubmit={handleSubmit}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n    >\r\n      <fieldset className=\"popup__inputs\">\r\n        <input\r\n          id=\"place-input\"\r\n          type=\"text\"\r\n          name=\"placeName\"\r\n          placeholder=\"Название\"\r\n          className=\"input popup-card__input-text popup__input-text\"\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          onChange={handleChangeName}\r\n          value={name}\r\n          /* required */\r\n        />\r\n        <span className=\"place-input-error popup__error\"></span>\r\n        <input\r\n          id=\"link-input\"\r\n          name=\"linkName\"\r\n          type=\"url\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          className=\"input popup-card__input-text popup__input-text\"\r\n          /* required */\r\n          onChange={handleChangeLink}\r\n          value={link}\r\n        />\r\n        <span className=\"link-input-error popup__error\"></span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default AddPlacePopup;\r\n","export const Spinner = () => {\r\n  return (\r\n    <div className=\"backgroundSpinner\">\r\n      <div className=\"backgroundSpinner__spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Header from \"./landing/Header.js\";\r\nimport Footer from \"./landing/Footer.js\";\r\nimport Main from \"./Main.js\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\nimport ImagePopup from \"./ImagePopup.js\";\r\nimport api from \"../utils/Api.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport EditProfilePopup from \"./EditProfilePopup.js\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\r\nimport AddPlacePopup from \"./AddPlacePopup.js\";\r\nimport { Spinner } from \"./Spinner.js\";\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] =\r\n    React.useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\r\n  // переменная состояния, отвечающая за данные пользователя\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getInfoAboutUser()\r\n      .then((currentUserData) => {\r\n        setCurrentUser(currentUserData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    setIsLoading(true);\r\n    api\r\n      .getCards()\r\n      .then((cards) => {\r\n        setCards(cards);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка при получении данных профиля\");\r\n      });\r\n  }, []);\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n    // Отправляем запросы в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, isLiked)\r\n      .then((newCardSomeLike) => {\r\n        setCards((state) =>\r\n          state.map((c) => (c._id === card._id ? newCardSomeLike : c))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function handleCardDelete(card) {\r\n    // Отправляется запрос в API и получаю массив, без удалённойкарточки\r\n    api\r\n      .deleteCard(card._id)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card._id));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //обработчики для стейтовых переменных\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddCardClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n  //функция закрытия попапов\r\n  function closeAllPopups() {\r\n    setEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n  function handleUpdateUser({ name, about }) {\r\n    api\r\n      .setInfoAboutUser({ name, about })\r\n      .then((currentUserData) => {\r\n        setCurrentUser(currentUserData);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function handleUpdateAvatar({ avatar }, onSuccess) {\r\n    api\r\n      .setAvatarUser({ avatar })\r\n      .then((currentUserData) => {\r\n        setCurrentUser(currentUserData);\r\n        onSuccess();\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function handleAddPlaceSubmit({ name, link }, onSuccess) {\r\n    api\r\n      .addCard({ name, link })\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        onSuccess();\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  return isLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Main\r\n          cards={cards}\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddCardClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n        />\r\n        <Footer />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <PopupWithForm title=\"Вы уверены?\" name=\"remove\" buttonTitle=\"Да\" />\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}